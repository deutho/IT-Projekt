/* .example-box {
    padding: 20px 10px;
    border-bottom: solid 1px #ccc;
    color: rgba(0, 0, 0, 0.87);
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
    background: white;
    font-size: 14px;
    min-height: 63px;
  } */

  input {
    text-align: center;
  }

  .inputFieldContainer{
    /* display: flex;
    flex-direction: row;
    align-items: flex-start;
    justify-content: flex-start; */
    flex-wrap: wrap;
    justify-content: center;
    align-content: stretch;
    max-width: 80%;
  }
  .example-box {
    padding: 6px 10px;
    margin-bottom: 5px;
    /* flex-grow: 1; */
    /* flex-shrink: 3; */
    /* font-size: 3vh; */
    /* border: solid 1px #ccc;
    color: rgba(0, 0, 0, 1);
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
    background: white;
    
    min-height: 40px;
    height: 40px;     */
  }
  
  .example-container_question {
    width: 80%;
    max-width: 100%;
    margin: 0 25px 0px 0;
    display: inline-block;
    vertical-align: top;
    min-width: 40%;
  }

  .question {
    display:flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
  
  .example-container_person {
    width: 5%;
    max-width: 100%;
    margin: 0 25px 25px 0;
    display: inline-block;
    vertical-align: top;
    min-width: 100px;
  }


  
  .example-list {
    border-bottom: solid 1px #ccc;
    min-height: 63px;
    background: white;
    /* border-radius: 4px; */
    overflow: hidden;
    display: block;
  }
  
  .overlay {
    position: fixed; /* Sit on top of the page content */
    display: block; /* Hidden by default */
    width: 100%; /* Full width (cover the whole page) */
    height: 100%; /* Full height (cover the whole page) */
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: black; /* Black background with opacity */
    opacity: 0.5;
    z-index: 3; /* Specify a stack order in case you're using a different order for other elements */
    cursor: default; /* Add a pointer on hover */
  }

  .dropshadow {
    filter: drop-shadow(2px 2px 4px rgba(0,0,0,0.25));
  }
  
  .superOverlay {
    position: fixed; /* Sit on top of the page content */
    display: flex; /* Hidden by default */
    width: 30%; /* Full width (cover the whole page) */
    background-color: white; /* Black background with opacity */
    z-index: 4; /* Specify a stack order in case you're using a different order for other elements */
    cursor: default; /* Add a pointer on hover */
  }

  .content {
    width: 80%;
    display: block;
    margin: 0 auto;
    padding: 20px 0px;
    min-width: 280px;
}
  
  .fullscreen {
      position: fixed; /* Sit on top of the page content */
      display: flex; /* Hidden by default */
      width: 100%; /* Full width (cover the whole page) */
      height: 100%; /* Full height (cover the whole page) */
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: 2; /* Specify a stack order in case you're using a different order for other elements */
      cursor: default; /* Add a pointer on hover */
      align-content: center;
      align-items: center;
      justify-content: center;
      justify-items: center;
  }
  
  .pageContainer {
    width: 100%;
    height: 90%;
    display: flex;
    flex-direction: column;
    /* justify-content: center; */
    align-items: center;
    padding: 20px 0px;
  }

  
  

  
  .actionBar {
    display:flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
  }

  
  .img-style {
    max-width: 50%;
    max-height: 50%;
	  margin: 30px auto;
    text-align: center;
	  min-width: 340px
}

.image {
	width: 60%; 
	height: 60%;
	border-radius: 15px;
	border: 20px solid white;
	filter: drop-shadow(4px 4px 4px rgba(0, 0, 0, 0.25));
}

.imageEditing-container {
  display:flex; 
  height: 100%; 
  width: 100%; 
  min-width: 60%;
  min-height: 100px; 
  align-items: center;
  flex-direction: column;
}

.centerImageEditing {
  display:inline-block; 
  margin: auto; 
  width: 100%; 
  vertical-align: middle;
}

.imageEditingItem1 {    
  padding-top: 5px;
  padding-right: 5px; 
  vertical-align: middle;
}

.imageEditingItem2 {
  width: 90%; 
  vertical-align: middle;
}

.imageEditingItem3 {
  height: 35px; 
  padding-left: 5%
}

.buttonsEditImage {
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  padding: 10px 0px;
}

.button {
  font-weight: 800;
}

.recordButton {
  width: 36px;
  height: 36px;
  border-radius: 100px;
  outline: none;
  border: none;
  cursor: pointer;
  background-color: #ff7267;
  
}

.record-div {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  width: 100%;

  margin-top: 20px;
}
.audioEditingContainer {
  width: 100%
}

.textForAudio {
  padding-right: 20px;
  min-width: 45%;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-end;
  overflow-wrap: break-word;
  font-size: 120%;
  width: 45%;    
}

.editAudioInteraction {
  min-width: 55%;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-start;
}

.actionBar {
  display:flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
}

.action-bar-styling {
  display: flex; 
  padding-top: 0; 
  justify-content: center; 
  align-items: center;
  width: 25%
}

.svgs-in-actionbar {
  width: 5%; 
  min-width: 50px; 
  min-height: 50px;
}


/* inputfield resizing - great alternative but no time to implement
 */
/* *,
*::before,
*::after {
  box-sizing: border-box;
}

.input-sizer {
  display: inline-grid;
  vertical-align: top;
  align-items: center;
  position: relative;
  border: solid 1px;
  padding: 0.25em 0.5em;
  margin: 5px;
}
.input-sizer.stacked {
  padding: 0.5em;
  align-items: stretch;
}
.input-sizer.stacked::after,
.input-sizer.stacked textarea {
  grid-area: 2/1;
}
.input-sizer::after,
.input-sizer textarea {
  width: auto;
  min-width: 1em;
  grid-area: 1/2;
  font: inherit;
  padding: 0.25em;
  margin: 0;
  resize: none;
  background: none;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: none;
}

.input-sizer::after {
  content: attr(data-value) " ";
  visibility: hidden;
  white-space: pre-wrap;
}
.input-sizer:focus-within {
  outline: solid 1px blue;  
}
.input-sizer:focus-within > span {
  color: blue;
}
.input-sizer:focus-within textarea:focus,
.input-sizer:focus-within input:focus {
  outline: none;
} */
